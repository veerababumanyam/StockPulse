name: stockpulse

services:
  # ================================
  # DATABASE LAYER
  # ================================
  
  # Main PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: stockpulse-postgres
    environment:
      POSTGRES_DB: stockpulse
      POSTGRES_USER: stockpulse_user
      POSTGRES_PASSWORD: stockpulse_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stockpulse_user -d stockpulse"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stockpulse-network
    restart: unless-stopped

  # Redis for Caching & Session Storage
  redis:
    image: redis:7-alpine
    container_name: stockpulse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass stockpulse_redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "stockpulse_redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stockpulse-network
    restart: unless-stopped

  # TimescaleDB for Advanced Time-Series Analytics
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: stockpulse-timescaledb
    environment:
      POSTGRES_DB: stockpulse_timeseries
      POSTGRES_USER: timescale_user
      POSTGRES_PASSWORD: timescale_password
    ports:
      - "5433:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./services/backend/timescale_init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U timescale_user -d stockpulse_timeseries"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stockpulse-network
    restart: unless-stopped

  # Neo4j for Knowledge Graph (with Graphiti)
  neo4j:
    image: neo4j:5.15-community
    container_name: stockpulse-neo4j
    environment:
      NEO4J_AUTH: neo4j/stockpulse_neo4j_password
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*,gds.*
      NEO4J_dbms_connector_bolt_listen__address: 0.0.0.0:7687
      NEO4J_dbms_connector_http_listen__address: 0.0.0.0:7474
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_dbms_memory_pagecache_size: 512m
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "stockpulse_neo4j_password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - stockpulse-network
    restart: unless-stopped

  # Qdrant Vector Database for RAG/Embeddings
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: stockpulse-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    networks:
      - stockpulse-network
    restart: unless-stopped

  # ================================
  # MCP SERVER LAYER
  # ================================

  # MCP Server Registry/Discovery Service
  mcp-registry:
    build:
      context: ./mcp-servers/registry
      dockerfile: ../Dockerfile.shared
    container_name: stockpulse-mcp-registry
    ports:
      - "8001:8001"
    environment:
      - MCP_SERVER_PORT=8001
      - MCP_SERVER_NAME=stockpulse-registry
      - REGISTRY_HOST=0.0.0.0
    networks:
      - stockpulse-network
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Authentication MCP Server
  mcp-auth-server:
    build:
      context: ./mcp-servers/auth-server
      dockerfile: Dockerfile
    container_name: stockpulse-mcp-auth
    ports:
      - "8002:8002"
    environment:
      - MCP_SERVER_PORT=8002
      - MCP_SERVER_NAME=stockpulse-auth
      - DATABASE_URL=postgresql+asyncpg://stockpulse_user:stockpulse_password@postgres:5432/stockpulse
      - REDIS_URL=redis://:stockpulse_redis_password@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - stockpulse-network
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # PostgreSQL MCP Server  
  mcp-postgres-server:
    build:
      context: ./mcp-servers/postgres-server
      dockerfile: ../Dockerfile.shared
    container_name: stockpulse-mcp-postgres
    ports:
      - "8003:8003"
    environment:
      - MCP_SERVER_PORT=8003
      - MCP_SERVER_NAME=stockpulse-postgres
      - DATABASE_URL=postgresql+asyncpg://stockpulse_user:stockpulse_password@postgres:5432/stockpulse
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - stockpulse-network
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # TimescaleDB MCP Server
  mcp-timescale-server:
    build:
      context: ./mcp-servers/timescale-server
      dockerfile: ../Dockerfile.shared
    container_name: stockpulse-mcp-timescale
    ports:
      - "8004:8004"
    environment:
      - MCP_SERVER_PORT=8004
      - MCP_SERVER_NAME=stockpulse-timescale
      - TIMESCALE_URL=postgresql+asyncpg://timescale_user:timescale_password@timescaledb:5432/stockpulse_timeseries
    depends_on:
      timescaledb:
        condition: service_healthy
    networks:
      - stockpulse-network
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Redis MCP Server
  mcp-redis-server:
    build:
      context: ./mcp-servers/redis-server
      dockerfile: ../Dockerfile.shared
    container_name: stockpulse-mcp-redis
    ports:
      - "8005:8005"
    environment:
      - MCP_SERVER_PORT=8005
      - MCP_SERVER_NAME=stockpulse-redis
      - REDIS_URL=redis://:stockpulse_redis_password@redis:6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - stockpulse-network
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Graphiti/Neo4j MCP Server
  mcp-graphiti-server:
    build:
      context: ./mcp-servers/graphiti-server
      dockerfile: ../Dockerfile.shared
    container_name: stockpulse-mcp-graphiti
    ports:
      - "8006:8006"
    environment:
      - MCP_SERVER_PORT=8006
      - MCP_SERVER_NAME=stockpulse-graphiti
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=stockpulse_neo4j_password
      - NEO4J_DATABASE=neo4j
      - OPENAI_API_KEY=${OPENAI_API_KEY:-""}
      - GRAPHITI_LLM_MODEL=gpt-4o-mini
      - GRAPHITI_EMBEDDING_MODEL=text-embedding-3-small
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - stockpulse-network
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Qdrant MCP Server
  mcp-qdrant-server:
    build:
      context: ./mcp-servers/qdrant-server
      dockerfile: ../Dockerfile.shared
    container_name: stockpulse-mcp-qdrant
    ports:
      - "8007:8007"
    environment:
      - MCP_SERVER_PORT=8007
      - MCP_SERVER_NAME=stockpulse-qdrant
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_API_KEY=${QDRANT_API_KEY:-""}
    depends_on:
      - qdrant
    networks:
      - stockpulse-network
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # ================================
  # MANAGEMENT TOOLS
  # ================================

  # Database Management Tools
  adminer:
    image: adminer
    container_name: stockpulse-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - timescaledb
    networks:
      - stockpulse-network

  # Redis Commander for Redis Management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: stockpulse-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379:0:stockpulse_redis_password
    ports:
      - "8082:8081"
    depends_on:
      - redis
    networks:
      - stockpulse-network

# ================================
# VOLUMES AND NETWORKS
# ================================

volumes:
  postgres_data:
  redis_data:
  timescaledb_data:
  neo4j_data:
  neo4j_logs:
  qdrant_data:

networks:
  stockpulse-network:
    driver: bridge 